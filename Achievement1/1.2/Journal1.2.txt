Exercise 1.2: Data Types in Python
Learning Goals

●	Explain variables and data types in Python
●	Summarize the use of objects in Python
●	Create a data structure for your Recipe app

Reflection Questions

1.	Imagine you’re having a conversation with a future colleague about whether to use the iPython Shell instead
 of Python’s default shell. What reasons would you give to explain the benefits of using the iPython Shell over the 
 default one?

A)	The IPython shell has many advantages for example tab completion, inline plotting, object introspection, command 
history and an interactive debugger.

2.	Python has a host of different data types that allow you to store and organize information. List 4 examples 
of data types that Python recognizes, briefly define them, and indicate whether they are scalar or non-scalar.

Data type |	Definition|	Scalar or Non-Scalar?

Integers(int) - Whole numbers - Scalar

Floats - Decimal numbers - Scalar

Strings(str) -	Anything inside quotations (can contain anything) -	Non-Scalar

List -	Collection of items that can be modified -	Non-Scalar


3.	A frequent question at job interviews for Python developers is: what is the difference between lists and 
tuples in Python? Write down how you would respond.

A)	Both store collections of data, but lists ”[ ]” are mutable which could lead to accidental changes whereas
tuples ”( )” are immutable and better suited as keys for dictionaries.

4.	In the task for this Exercise, you decided what you thought was the most suitable data structure for storing
 all the information for a recipe. Now, imagine you’re creating a language-learning app that helps users memorize 
 vocabulary through flashcards. Users can input vocabulary words, definitions, and their category (noun, verb, etc.)
  into the flashcards. They can then quiz themselves by flipping through the flashcards. Think about the necessary 
  data types and what would be the most suitable data structure for this language-learning app. Between tuples, lists,
   and dictionaries, which would you choose? Think about their respective advantages and limitations, and where 
   flexibility might be useful if you were to continue developing the language-learning app beyond vocabulary 
   memorization. 

A)	I would choose dictionaries, this would allow for organized storage of the flash cards data with the 
categories being word, definition and category.
Dictionaries are mutable so the user could be able to update or change a cards data along with being able to
 add for flashcards/words for more words to study.
